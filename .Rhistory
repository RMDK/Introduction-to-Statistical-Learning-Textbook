modelFit
modelFit <- train(Direction~Lag1+Lag2, method='qda', preProcess = c('scale', 'center'),data=train)
modelFit
confusionMatrix(test$Direction, predict(modelFit, test))
require(knitr)
library(ggplot2)
install.packages("MASS")
library(class)
train <- Year >= 2005
head(Smarket)
attach(Smarket)
library(ISLR)
attach(Smarket)
head(Smarket)
train <- Year >= 2005
test <- Year < 2005
trainX = cbind(Lag1, Lag2)[train,]
testX = cbind(Lag1, Lag2)[!train,]
trainY = Direction[train]
trainY
trainY = Direction[train,]
testY = Direction[!train]
table(knn.pred, testY)
knn.pred = knn(trainX, testX, trainY, k=1)
set.seed(1)
knn.pred = knn(trainX, testX, trainY, k=1)
table(knn.pred, testY)
library(caret)
confusionMatrix(knn.pred, testY)
knn.pred = knn(trainX, testX, trainY, k=3)
table(knn.pred, testY)
confusionMatrix(knn.pred, testY)
knn.pred = knn(trainX, testX, trainY, k=5)
table(knn.pred, testY)
confusionMatrix(knn.pred, testY)
knn.pred = knn(trainX, testX, trainY, k=3)
table(knn.pred, testY)
confusionMatrix(knn.pred, testY)
attach(Caravan)
str(Caravan)
summary(Caravan$Purchase)
dim(Caravan)
train
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
train
head(train)
names(train)
pre <- preProcess(train[,-86], method=c('center','scale'))
train[86]
knn.pred <- knn(train[,-86], test[,-86], train[86], k=1)
trainp,-86
train[,-86]
names(train[,-86])
knn.pred <- knn(train[,-86], test[,-86], train[86], k=1)
knn.pred <- knn(train=train[,-86], test=test[,-86], cl=train[86], k=1)
knn.pred <- knn(train=train[,-86], test=test[,-86], cl=factor(train[86]), k=1)
train[86]
str(train[86])
knn.pred <- knn(train=train[,-86], test=test[,-86], cl=train[86], k=1)
length(train[,-86])
dim(train[,-86])
dim(train[,86])
dim(train[86])
knn.pred <- knn(train=train[-86], test=test[-86], cl=train[86], k=1)
dim(train[,-86])
dim(train[,86])
dim(train[86])
dim(train[-86])
train
class(train)
knn.pred <- knn(train=train[-86], test=test[-86], cl=train[86], k=1)
library(caret)
set.seed(1)
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
pre <- preProcess(train[,-86], method=c('center','scale'))
knn.pred <- train(train[,-86], train[86], method='knn', preProcess=pre)
train[86]
trainp,-86
knn.pred <- train(train[,-86], train[,86], method='knn', preProcess=pre)
knn.pred <- train(train[-86], train[86], method='knn', preProcess=pre)
trainp,-86train
train
trainp-86
train[-86]
names(train[-86])
knn.pred <- train(train[,-86], train[86], method='knn', preProcess=pre)
knn.pred <- train(train[,-86], train[,86], method='knn', preProcess=pre)
knn.pred <- train(train[,-86], train[,86], method='knn', pre)
pre <- preProcess(train[,-86], method=c('center','scale'))
pre
knn.pred <- train(train[,-86], train[,86], method='knn', pre)
knn.pred <- train(train[,-86], train[,86], method='knn', preProcess=c('center', 'scale'))
nzv <- nearZeroVar(train, saveMetrics = TRUE)
nzv
confusionMatrix(test$Purchase, predict(knn.pred, test[,-86]))
train_nzv <- train[-nzv$nzv,]
test_nzv <- test[-nzv$nzv,]
cor <- cor(train[,-86])
highCor <- findCorrelation(cor, cutoff = 0.5)
highCor
highCor <- findCorrelation(cor, cutoff = 0.75)
highCor
knn.pred <- train(train[,-86], train[,86], method='knn', preProcess=c('center', 'scale', 'pca'))
knn.pred <- train(train_nzv[,-86], train_nzv[,86], method='knn', preProcess=c('center', 'scale', 'pca'))
warnings()
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,-86]))
knn.pred
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.5, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
nzv <- nearZeroVar(train, saveMetrics = TRUE)
nzv
train_nzv <- train[-nzv$nzv,]
test_nzv <- test[-nzv$nzv,]
test_nzv
dim(test)
dim(test_nzv)
test_nzv <- test[-nzv$nzv]
dim(test_nzv)
nzv$nzv
test_nzv <- test[-,nzv$nzv]
test_nzv <- test[,-nzv$nzv]
dim(test_nzv)
test_nzv <- test[-nzv$nzv,]
dim(test_nzv)
test_nzv <- test[!,nzv$nzv]
test_nzv <- test[,!nzv$nzv]
dim(test_nzv)
train_nzv <- train[,!nzv$nzv]
test_nzv <- test[,!nzv$nzv]
dim(train_nzv)
cor <- cor(train[,-86])
cor <- cor(train_nzv[,-86])
names(train_nzv)
cor <- cor(train_nzv[,-52])
highCor <- findCorrelation(cor, cutoff = 0.75)
highCor
knn.pred <- train(train_nzv[,-86], train_nzv[,86], method='knn', preProcess=c('center', 'scale', 'pca'))
knn.pred <- train(train_nzv[,-52], train_nzv[,52], method='knn', preProcess=c('center', 'scale', 'pca'))
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,-52]))
table(Caravan$Purchase)
table(train$Purchase)
table(test$Purchase)
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv$Purchase))
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,!52]))
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,-52]))
names(test_nzv[,-52])
names(train_nzv[,-52])
names(train_nzv[,52])
names(train_nzv[52])
knn.pred <- train(train_nzv[,-52], train_nzv[52], method='knn', preProcess=c('center', 'scale', 'pca'))
train_nzv[52]
str(train_nzv[52])
knn.pred <- train(train_nzv$Purchase, train_nzv[,-52], method='knn', preProcess=c('center', 'scale', 'pca'))
train_nzv[,-52]
names(train_nzv[,-52])
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale', 'pca'))
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,-52]))
table(test_nzv$Purchase)
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv))
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,-52]))
test_nzv$Purchase
predict(knn.pred, test_nzv[,-52])
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale'))
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,-52]))
library(class)
library(ISLR)
attach(Smarket)
train <- Year >= 2005
test <- Year < 2005
trainX = cbind(Lag1, Lag2)[train,]
testX = cbind(Lag1, Lag2)[!train,]
trainY = Direction[train]
testY = Direction[!train]
library(caret)
set.seed(1)
knn.pred = knn(trainX, testX, trainY, k=3)
table(knn.pred, testY)
confusionMatrix(knn.pred, testY)
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale'))
knn.pred
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale'), k=12)
confusionMatrix(test_nzv$Purchase, predict(knn.pred, test_nzv[,-52]))
confusionMatrix( predict(knn.pred, test_nzv[,-52]), test_nzv$Purchase,)
confusionMatrix(predict(knn.pred, test_nzv[,-52]), test_nzv$Purchase)
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale', 'pca'), k=12)
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale', 'pca'))
confusionMatrix(predict(knn.pred, test_nzv[,-52]), test_nzv$Purchase)
knn.pred
knn.pred <- train(y=train$Purchase, x=train[,-52], method='knn', preProcess=c('center', 'scale', 'pca'))
knn.pred <- train(y=train$Purchase, x=train[,-86], method='knn', preProcess=c('center', 'scale', 'pca'))
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.5, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
knn.pred <- train(y=train$Purchase, x=train[,-86], method='knn', preProcess=c('center', 'scale', 'pca'))
knn.pred
confusionMatrix(predict(knn.pred, test[,-86]), test$Purchase)
knn.pred <- train(y=train$Purchase, x=train[,-86], method='knn', preProcess=c('center', 'scale'))
confusionMatrix(predict(knn.pred, test[,-86]), test$Purchase)
fun<-train(y=train$Purchase, x=train[,-86])
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
knn.pred <- train(y=train$Purchase, x=train[,-86], method='knn', preProcess=c('center', 'scale'))
knn.pred
confusionMatrix(predict(knn.pred, test[,-86]), test$Purchase)
knn.pred <- train(y=train$Purchase, x=train[,-86], method='knn', preProcess=c('center', 'scale', 'pca'))
knn.pred
confusionMatrix(predict(knn.pred, test[,-86]), test$Purchase)
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale', 'pca'))
knn.pred
confusionMatrix(predict(knn.pred, test_nzv[,-52]), test_nzv$Purchase)
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale'))
knn.pred
confusionMatrix(predict(knn.pred, test_nzv[,-52]), test_nzv$Purchase)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
nzv <- nearZeroVar(train, saveMetrics = TRUE)
nzv
train_nzv <- train[,!nzv$nzv]
test_nzv <- test[,!nzv$nzv]
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-52], method='knn', preProcess=c('center', 'scale'))
knn.pred
confusionMatrix(predict(knn.pred, test_nzv[,-52]), test_nzv$Purchase)
names(train[,-52])
dim(test_nzv)
dim(train_nav)
dim(train_nzv)
names(train_nzv[,-52])
knn.pred <- train(y=train_nzv$Purchase, x=train_nzv[,-51], method='knn', preProcess=c('center', 'scale'))
knn.pred
confusionMatrix(predict(knn.pred, test_nzv[,-51]), test_nzv$Purchase)
logit <- train(train$Purchase, train[,-86], method='glm', preProcess=c('scale', 'center'), family=binomial(link='logit'))
logit <- train(train$Purchase,. , method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit <- train(train$Purchase ~ . , method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit <- train(train$Purchase ~. , method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit <- train(train$Purchase ~. data=Caravan,
method='glm',
preProcess=c('scale', 'center'),
logit <- train(train$Purchase ~., data=Caravan,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit <- train(train$Purchase ~., data=Caravan,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit <- train(train$Purchase ~., data=Caravan,
method='glm',
preProcess=c('scale', 'center'))
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
warnings()
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
logit <- train(Purchase ~., data=train_nzv,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
logit
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center', 'pca'),
family=binomial(link='logit'))
logit
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
confusionMatrix(predict(logit, test[,-51]), test$Purchase)
confusionMatrix(predict(logit, test[,-52]), test$Purchase)
confusionMatrix(predict(logit, test[,-50]), test$Purchase)
names(test)
names_nzv(test)
names_nzv(test_nzv)
names(test_nzv)
6
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
logit <- train(Purchase ~., data=train_nzv,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit
confusionMatrix(predict(logit, test_nzv[,-51]), test_nzv$Purchase)
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
predict(cutoff = 0.25, logit, test[,-86])
predict(logit, test[,-86])
predict(logit, test[,-86], threshold = 0.25)
logit
str(logit)
logit$fitted_values
logit$fitted.values
logit$pred
logit$method
logit$results
logit$pred
predict(logit, test[,-86])$pred
predict(logit, test[,-86])
tmp<-predict(logit, test[,-86])
str(tmp)
str(logit)
logit$fitted.values
logit$finalModel$fitted.values
confusionMatrix(predict(logit, test[,-86],
type='response'), test$Purchase)
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
logit.pred <- predict(logit, test[,-86], type = 'prob')
head(logit.pred)
logit.pred <- predict(logit, test[,-86], type = 'raw')
head(logit.pred)
logit.pred <- predict(logit, test[,-86], type = 'prob')
head(logit.pred)
confusionMatrix(predict(logit, test[,-86]), test$Purchase, norm = TRUE)
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
confusionMatrix(predict(logit, test[,-86]), test$Purchase, prevalence = 0.25)
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
confusionMatrix(predict(logit, test[,-86]), test$Purchase, prevalence = 0.5)
confusionMatrix(predict(logit, test[,-86]), test$Purchase, prevalence = 0.15)
confusionMatrix(predict(logit, test[,-86]), test$Purchase, prevalence = 0.05)
confusionMatrix(predict(logit, test[,-86]), test$Purchase, prevalence = 0.65)
```
predict(logit, test[,-86], type='response')
predict(logit, test[,-86], type='prob')
xtab <- table(predict(logit, test[,-86], test[,-86])
require(knitr)
attach(Caravan)
library(caret)
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
train
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
attach(Caravan)
library(ISLR)
attach(Caravan)
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
knn.pred <- train(y=train$Purchase, x=train[,-86],
method='knn',
preProcess=c('center', 'scale'))
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
warnings()
xtab <- table(predict(logit, test[,-86], test[,-86])
confusionMatrix(xtab, prevalence = 0.25)
xtab <- table(predict(logit, test[,-86], test[,-86])
confusionMatrix(xtab, prevalence = 0.25)
xtab <- table(predict(logit, test[,-86], test[,-86])
library(ISLR)
library(caret)
set.seed(1)
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
library(doMC)
registerDoMC(cores = 6)
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
logit
xtab <- table(predict(logit, test[,-86]), test[,-86])
predict(logit, test[,-86])
test[,-86]
length(test[,-86])
dim(test[,-86])
dim(predict(logit, test[,-86]))
length(predict(logit, test[,-86]))
xtab <- table(predict(logit, test[,-86]), test$Purchase)
confusionMatrix(xtab, prevalence = 0.25)
confusionMatrix(xtab, prevalence = 0.15)
confusionMatrix(xtab, prevalence = 0.95)
confusionMatrix(xtab, prevalence = 0.55)
confusionMatrix(xtab, prevalence = 0.25)
confusionMatrix(xtab, prevalence = 0.3)
confusionMatrix(xtab, prevalence = 0.4)
confusionMatrix(xtab, prevalence = 0.5)
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
pred <- predict(logit, test[,-86], test$Purchase, type='prob')
pred <- predict(logit, test[,-86], test$Purchase, type='probs')
pred <- predict(logit, test[,-86], test$Purchase, type='prob')
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
pred <- predict(logit, test[,-86]),  type='prob')
pred <- predict(logit, test[,-86],  type='prob')
pred.probs <- predict(logit, test[,-86],  type='prob')
pred.probs
pred <- rep('No', length(pred.probs)
library(ISLR)
attach(Caravan)
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
# Create preProcess object which will later feed into the training model
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
library(caret)
set.seed(1)
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.75, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
library(doMC)
registerDoMC(cores = 6)
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
pred.probs[0]
pred.probs <- predict(logit, test[,-86],  type='prob')
pred.probs[1]
pred.probs[2]
names(pred.probs[2])
pred <- rep('No', length(pred.probs))
pred[pred.probs[2]>0.25] <- 'Yes'
table(pred)
pred
pred <- rep('No', length(pred.probs))
pred
pred <- rep('No', dim(pred.probs))
pred <- rep('No', length(pred.probs[,1]))
pred
pred[pred.probs[2] > 0.25] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.35] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.15] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred[pred.probs[2] > 0.25] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred[pred.probs[2] > 0.55] <- 'Yes'
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.55] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.65] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.3] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.25] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
inTrain <- createDataPartition(y=Caravan$Purchase, p = 0.80, list=FALSE)
train <- Caravan[inTrain,]
test <- Caravan[-inTrain,]
library(doMC)
registerDoMC(cores = 6)
knn.pred <- train(y=train$Purchase, x=train[,-86],
method='knn',
preProcess=c('center', 'scale'))
confusionMatrix(predict(knn.pred, test_nzv[,-86]), test_nzv$Purchase)
confusionMatrix(predict(knn.pred, test[,-86]), test$Purchase)
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
pred.probs <- predict(logit, test[,-86],  type='prob')
pred.probs
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.25] <- 'Yes'
pred <- rep(NA, length(pred.probs[,1]))
pred[pred.probs[1] > 0.25] <- 'No'
pred[pred.probs[2] > 0.25] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
pred <- rep('No', length(pred.probs[,1]))
pred[pred.probs[2] > 0.25] <- 'Yes'
table(pred)
confusionMatrix(pred, test$Purchase)
logit <- train(Purchase ~., data=train)
logit
confusionMatrix(predict(logit, test[,-86]), test$Purchase)
logit <- train(Purchase ~., data=train,
method='glm',
preProcess=c('scale', 'center'),
logit <- train(Purchase ~., data=train_nzv,
method='glm',
preProcess=c('scale', 'center'),
family=binomial(link='logit'))
