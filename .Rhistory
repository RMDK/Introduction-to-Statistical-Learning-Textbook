ggplot(data = df, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 1, 0.1), labels=c('0%', '10%','20%', '30%','40%', '50%','60%', '70%','80%', '90%','100%'))+
scale_x_continuous(breaks=seq(1820, 2000, 20), labels=seq(1820, 2000, 20))+
ylab('Labor and capital income (% national income')+
xlab('In the 21st century, capital income (rent, profits, dividends, interest,..)\n absorbs about 30% of national income, vs. 70% for labor income (salaried and non salaried). \nSources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.2. The capital-labor split in France, 1820-2010')+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
tab = read.xlsx("~/documents/projects/capitalIn21stCenturyinR/Piketty2014FiguresTables/Chapter6TablesFigures.xlsx",sheetName="TS6.1", rowIndex=6:33,colIndex=1:3,header=TRUE)
names(tab) =  c('Year','Capital Income', 'Labor Income')
df <- melt(tab, id.vars = 'Year')
tab = read.xlsx("~/documents/projects/capitalIn21stCenturyinR/Piketty2014FiguresTables/Chapter6TablesFigures.xlsx",sheetName="TS6.1", rowIndex=6:33,colIndex=1:3,header=TRUE)
names(tab) =  c('Year','Capital Income', 'Labor Income')
tabs
tab
head(tab)
tab = read.xlsx("~/documents/projects/capitalIn21stCenturyinR/Piketty2014FiguresTables/Chapter6TablesFigures.xlsx",sheetName="TS6.1", rowIndex=8:33,colIndex=1:3,header=TRUE)
names(tab) =  c('Year','Capital Income', 'Labor Income')
```
```{r fig6.1Clean}
df <- melt(tab, id.vars = 'Year')
```
```{r fig6.1Plot, fig.retina=2}
ggplot(data = df, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 1, 0.1), labels=c('0%', '10%','20%', '30%','40%', '50%','60%', '70%','80%', '90%','100%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Labor and capital income (% national income')+
xlab('During the 19th century, capital income (rent, profits, dividends, interest,..) \n absorbed about 40% of national income, vs. 60% for labor income (salaried and non salaried).\n Sources and series: see piketty.pse.ens.fr/capital21c.
')+
ggtitle('Figure 6.1. The capital-labor split in the Britain, 1770-2010
')+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
s1 = read.xlsx("~/documents/projects/capitalIn21stCenturyinR/Piketty2014FiguresTables/Chapter6TablesFigures.xlsx",
sheetName="TS6.1", rowIndex=8:33,colIndex=c(1,4:5),header=TRUE)
s1
names(s1) =  c('Year','Observed', 'Pure')
ggplot(data = s2, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 1, 0.1), labels=c('0%', '10%','20%', '30%','40%', '50%','60%', '70%','80%', '90%','100%'))+
scale_x_continuous(breaks=seq(1820, 2010, 20), labels=seq(820, 2000, 20))+
ylab('Labor and capital income (% national income')+
xlab('During the 19th century, capital income (rent, profits, dividends, interest,..) \n absorbed about 40% of national income, vs. 60% for labor income (salaried and non salaried).\n Sources and series: see piketty.pse.ens.fr/capital21c.
')+
ggtitle('Figure 6.1. The capital-labor split in the Britain, 1770-2010
')+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
s2 = read.xlsx("~/documents/projects/capitalIn21stCenturyinR/Piketty2014FiguresTables/Chapter6TablesFigures.xlsx",
sheetName="TS6.2", rowIndex=6:26,colIndex=1:3,header=TRUE)
s2 = read.xlsx("~/documents/projects/capitalIn21stCenturyinR/Piketty2014FiguresTables/Chapter6TablesFigures.xlsx",
sheetName="TS6.2", rowIndex=6:26,colIndex=1:3,header=TRUE)
names(s2) =  c('Year','Capital Income', 'Labor Income')
s2 <- melt(s2, id.vars = 'Year')
ggplot(data = s2, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 1, 0.1), labels=c('0%', '10%','20%', '30%','40%', '50%','60%', '70%','80%', '90%','100%'))+
scale_x_continuous(breaks=seq(1820, 2010, 20), labels=seq(820, 2010, 20))+
ylab('Labor and capital income (% national income')+
xlab('During the 19th century, capital income (rent, profits, dividends, interest,..) \n absorbed about 40% of national income, vs. 60% for labor income (salaried and non salaried).\n Sources and series: see piketty.pse.ens.fr/capital21c.
')+
ggtitle('Figure 6.1. The capital-labor split in the Britain, 1770-2010
')+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s2, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 1, 0.1), labels=c('0%', '10%','20%', '30%','40%', '50%','60%', '70%','80%', '90%','100%'))+
scale_x_continuous(breaks=seq(1820, 2010, 20), labels=seq(1820, 2010, 20))+
ylab('Labor and capital income (% national income')+
xlab('During the 19th century, capital income (rent, profits, dividends, interest,..) \n absorbed about 40% of national income, vs. 60% for labor income (salaried and non salaried).\n Sources and series: see piketty.pse.ens.fr/capital21c.
')+
ggtitle('Figure 6.1. The capital-labor split in the Britain, 1770-2010
')+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
s1 = read.xlsx("~/documents/projects/capitalIn21stCenturyinR/Piketty2014FiguresTables/Chapter6TablesFigures.xlsx",
sheetName="TS6.1", rowIndex=8:33,colIndex=c(1,4:5),header=TRUE)
names(s1) =  c('Year','Observed', 'Pure')
```
```{r fig6.3Clean}
s1 <- melt(s1, id.vars = 'Year')
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital', 'Pure rate of return to capital (estimate)'))+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_fill_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital', 'Pure rate of return to capital (estimate)'))+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
```
ggplot(data = s1, aes(x=Year, y=value))+
geom_line()+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital', 'Pure rate of return to capital (estimate)'))+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value), color=variable)+
geom_line()+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital', 'Pure rate of return to capital (estimate)'))+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value, color=variable))+
geom_line()+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital', 'Pure rate of return to capital (estimate)'))+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # rem
install.pacakges('ggthemes')
install.packages('ggthemes')
library(ggthemes)
theme_wsj(10)+ # Make b/w theme
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_wsj(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_tufte(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_fivethirtyeight(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_fivethirtyeight(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_element(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_economist(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
ggplot(data = s1, aes(x=Year, y=value))+
geom_line(aes(color=variable))+
geom_point(aes(shape=variable))+
scale_y_continuous(breaks=seq(0, 0.16, 0.02), labels=c('0%', '2%','4%', '6%','8%', '10%','12%', '14%','16%'))+
scale_x_continuous(breaks=seq(1770, 2010, 20), labels=seq(1770, 2010, 20))+
ylab('Annual rate of return')+
xlab('The pure rate of return to capital is roughly stable around 4%-5% in the long run.\n
Sources and series: see piketty.pse.ens.fr/capital21c.')+
ggtitle('Figure 6.3. The pure return to capital in Britain, 1770-2010')+
scale_shape_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
scale_color_discrete(name='',
breaks=c('Observed', 'Pure'),
labels=c('Observed average rate of return to capital',
'Pure rate of return to capital (estimate)'))+
theme_bw(10)+ # Make b/w theme
theme(legend.title=element_blank()) # remove legend title
install.packages('ggvis')
install.packages('rCharts')
library(rCharts)
attach(Auto)
library(ISLR)
attach(Auto)
set.seed(1)
train = sample(392, 196)
lm.fit <- lm(mpg ~ horsepower, data=Auto, subset=train)
mean((mpg - predict(lm.fot, Auto))[-train]^2)
mean((mpg - predict(lm.ftt, Auto))[-train]^2)
mean((mpg - predict(lm.fit, Auto))[-train]^2)
lm.git2 <- lm(mpg ~ poly(horsepower, 2), sata=Auto, subset = train)
mean((mpg - predict(lm.fit2, Auto))[-train]^2
lm.git2 <- lm(mpg ~ poly(horsepower, 2), data=Auto, subset = train)
lm.fit2 <- lm(mpg ~ poly(horsepower, 2), data=Auto, subset = train)
mean((mpg - predict(lm.fit2, Auto))[-train]^2
mean((mpg - predict(lm.fit2, Auto))[-train]^2)
```
mean((mpg - predict(lm.fit2, Auto))[-train]^2)
lm.fit3 <- lm(mpg ~ poly(horsepower, 3), data=Auto, subset = train)
mean((mpg - predict(lm.fit2=3, Auto))[-train]^2)
lm.fit3 <- lm(mpg ~ poly(horsepower, 3), data=Auto, subset = train)
mean((mpg - predict(lm.fit2=3, Auto))[-train]^2)
mean((mpg - predict(lm.fit3, Auto))[-train]^2)
library(ggplot2)
gdURL <- "http://www.stat.ubc.ca/~jenny/notOcto/STAT545A/examples/gapminder/data/gapminderDataFiveYear.txt"
gDat <- read.delim(file = gdURL)
str(gDat)
ggplot(gDat, aes(x = gdpPercap, y = lifeExp)) # error!
p <- ggplot(gDat, aes(x = gdpPercap, y = lifeExp)) # just initializes
p + layer(geom = "point")
p + geom_point()
ggplot(gDat, aes(x = log10(gdpPercap), y = lifeExp)) + geom_point()
p + geom_point() + scale_x_log10()
ggplot(gDat, aes(x = continent)) + geom_bar()
ggplot(gDat, aes(x = continent), stat="bin") + geom_bar()
ggplot(gDat, aes(x = continent)) + layer(stat="bin")
ggplot(gDat, aes(x = continent, y = country)) + layer(stat="sum")
ggplot(gDat, aes(x = continent, y = country)) + stat_sum()
ggplot(gDat, aes(x = continent)) + geom_bar()
ggplot(gDat, aes(x = continent), stat="bin") + geom_bar()
ggplot(gDat, aes(x = continent)) + layer(stat="bin")
ggplot(gDat, aes(x = continent, y = country)) + layer(stat="sum")
head(gDat)
library(plyr)
ggplot(gDat, aes(x = continent)) + geom_bar()
gDat[gDat$continent='Asia']$country
gDat[gDat$continent=='Asia']$country
gDat[gDat$continent=='Asia']
gDat$continent
gDat$continent=='Asia'
gDat$country[gDat$continent=='Asia']
ggplot(gDat, aes(x = levels(continent), y = levels(country))) + stat_sum()
ggplot(gDat, aes(x = continent, y = country)) + stat_summary(fun.y = levels(country))
ggplot(gDat, aes(x = continent, y = country)) + stat_summary(fun.y = sum(levels(gDat$country)))
## still not exactly what I want; how to count countries within continent?
ggplot(gDat, aes(x = continent, y = country)) + stat_summary(fun.y = sum(levels(gDat$country)))
ggplot(gDat, aes(x = continent, y = country)) + stat_summary(fun.y = (levels(gDat$country)))
## still not exactly what I want; how to count countries within continent?
ggplot(gDat, aes(x = continent, y = country)) + stat_summary(fun.y = as.character(levels(gDat$country)))
levels(gDat$country)
ggplot(gDat, aes(x = continent, y = country)) + stat_summary(fun.y = levels(gDat$country))
ggplot(gDat, aes(x = continent, y = country)) + layer(stat="sum")
ggplot(gDat, aes(x = continent)) + layer(stat="bin")
ggplot(gDat, aes(x = continent, y = country)) +
stat_summary(fun.y = function(continent = x) {
return sum(levels(gDat$country[gDat$continent==x]))
## still not exactly what I want; how to count countries within continent?
ggplot(gDat, aes(x = continent, y = country)) +
stat_summary(fun.y = function(continent = x) {
return(sum(levels(gDat$country[gDat$continent==x])))
## still not exactly what I want; how to count countries within continent?
ggplot(gDat, aes(x = continent, y = country)) +
stat_summary(fun.y = function(continent = x) {
return(sum(levels(gDat$country[gDat$continent==x])))})
## still not exactly what I want; how to count countries within continent?
ggplot(gDat, aes(x = continent, y = country)) + geom_bar()
ggplot(gDat, aes(x = continent, y = country))+
geom_bar()
ggplot(gDat, aes(x = continent, y = country))+
geom_bar()
ggplot(gDat, aes(x = continent))+
geom_bar(stat='identity')
ggplot(gDat, aes(x = continent))+
geom_bar(stat='identity')
ggplot(gDat, aes(x = continent))+
geom_bar(stat='bin')
gDat$country[gDat$continent=='Asia']
unique(gDat$country[gDat$continent=='Asia'])
levels(gDat$country[gDat$continent=='Asia'])
sum(levels(gDat$country[gDat$continent=='Asia']))
count(levels(gDat$country[gDat$continent=='Asia']))
dim(levels(gDat$country[gDat$continent=='Asia']))
table(levels(gDat$country[gDat$continent=='Asia']))
length(levels(gDat$country[gDat$continent=='Asia']))
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = function(x) {
return length(levels(y))
})
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = function() {
return(length(levels(y)))
})
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = levels)
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = unique)
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = length)
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = sum)
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = count)
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = table)
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = table, geom='bar')
ggplot(gDat, aes(x = continent, y=country))+
stat_summary(fun.y = sum, geom='bar')
unique(gDat )
ggplot(gDat, aes(x = continent)) + geom_bar()
ggplot(unique(gDat), aes(x = continent)) + geom_bar()
ggplot(gDat, aes(x = continent)) + stat_summary(fun.y=length(levels(country)), geom='bar')
ggplot(gDat, aes(x = continent)) + stat_summary(fun.y=length(levels(gDatcountry)), geom='bar')
ggplot(gDat, aes(x = continent)) + stat_summary(fun.y=length(levels(gDat$country)), geom='bar')
ggplot(gDat, aes(x = continent)) + stat_summary(fun.y=length(levels(gDat$country)), geom='bar', stat'bin')
ggplot(gDat, aes(x = continent, y=country)) + stat_summary(fun.y=length(levels(gDat$country)), geom='bar')
ggplot(gDat, aes(x = continent)) + stat_summary(fun.y=length(levels(gDat$country)), geom='bar', stat='identity')
ggplot(gDat, aes(x = continent, y=levels(unique(country)))) + geom_bar()
library(ISLR)
attach(Auto)
set.seed(1)
train = sample(392, 196)
lm.fit <- lm(mpg ~ horsepower, data=Auto, subset=train)
# Predict and calculate MSE of the validation set.
mean((mpg - predict(lm.fit, Auto))[-train]^2)
lm.fit2 <- lm(mpg ~ poly(horsepower, 2), data=Auto, subset = train)
mean((mpg - predict(lm.fit2, Auto))[-train]^2)
lm.fit3 <- lm(mpg ~ poly(horsepower, 3), data=Auto, subset = train)
mean((mpg - predict(lm.fit3, Auto))[-train]^2)
set.seed(2)
train <- sample(392, 196)
lm.fit <- lm(mpg ~ horsepower, subset=train)
mean((mpg - predict(lm.fit, Auto))[-train]^2)
glm.fit <- glm(mpg ~ horsepower, data=Auto)
coef(glm.fit)
library(boot)
cv.err <- cv.glm(Auto, glm.fit)
cv.err$delta
summary(cv.err)
cv.err <- rep(0, 5)
for (i in 1:5) {
glm.fit <- glm(mpg ~ poly(horsepower, i), data=Auto)
cv.err[i] <- cv.glm(Auto, glm.fit)$delta[1]
}
cv.err
set.seed(17) # For reproduction
cv.err <- rep(0, 10)
for (i in 1:10) {
glm.fit <- glm(mpg ~ poly(horsepower, i), data=Auto)
cv.err[i] <- cv.glm(Auto, glm.fit, K=10)$delta[1]
}
cv.err
system.time(for (i in 1:10) {
glm.fit <- glm(mpg ~ poly(horsepower, i), data=Auto)
cv.err[i] <- cv.glm(Auto, glm.fit, K=10)$delta[1]
})
index
boot.fn <- function(data, index) {
return(coef(lm(mpg ~ horsepower, data=Auto, subset = index)))
}
boot.fn(Auto, 1:392)
boot.fn(Auto, sample(392, 392, replace = T))
sample
help(sample)
sample(392, 392)
sample(10)
sample(10, 10)
sample(10, 1)
sample(10, 2)
boot.fn(Auto, sample(x=392, n=392, replace = T))
boot.fn(Auto, sample(x=392, size=392, replace = T))
boot(Auto, boot.fn, 1000)
summary(lm(mpg ~ horsepower, data=Auto))$coef
